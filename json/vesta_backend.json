[{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2022-44840","VulnerableVersion":"\u003c2.40","Level":"HIGH","PublishDate":"2023-08-22","Desc":"Heap buffer overflow vulnerability in binutils readelf before 2.40 via function find_section_in_set in file readelf.c.","Score":7.8},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2022-45703","VulnerableVersion":"\u003c2.40","Level":"HIGH","PublishDate":"2023-08-22","Desc":"Heap buffer overflow vulnerability in binutils readelf before 2.40 via function display_debug_section in file readelf.c.","Score":7.8},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2023-25584","VulnerableVersion":"\u003c2.40","Level":"HIGH","PublishDate":"2023-09-14","Desc":"An out-of-bounds read flaw was found in the parse_module function in bfd/vms-alpha.c in Binutils.","Score":7.1},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2022-48063","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-08-22","Desc":"GNU Binutils before 2.40 was discovered to contain an excessive memory consumption vulnerability via the function load_separate_debug_files at dwarf2.c. The attacker could supply a crafted ELF file and cause a DNS attack.","Score":5.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2022-48064","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-08-22","Desc":"GNU Binutils before 2.40 was discovered to contain an excessive memory consumption vulnerability via the function bfd_dwarf2_find_nearest_line_with_alt at dwarf2.c. The attacker could supply a crafted ELF file and cause a DNS attack.","Score":5.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2022-48065","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-08-22","Desc":"GNU Binutils before 2.40 was discovered to contain a memory leak vulnerability var the function find_abstract_instance in dwarf2.c.","Score":5.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2023-1972","VulnerableVersion":"\u003c=2.40","Level":"MEDIUM","PublishDate":"2023-05-17","Desc":"A potential heap based buffer overflow was found in _bfd_elf_slurp_version_tables() in bfd/elf.c. This may lead to loss of availability.","Score":6.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2023-25585","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-09-14","Desc":"A flaw was found in Binutils. The use of an uninitialized field in the struct module *module may lead to application crash and local denial of service.","Score":5.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2023-25586","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-09-14","Desc":"A flaw was found in Binutils. A logic fail in the bfd_init_section_decompress_status function may lead to the use of an uninitialized variable that can cause a crash and local denial of service.","Score":5.5},{"Name":"binutils","CurrentVersion":"2.40.0-2","Type":"System","CVEID":"CVE-2023-25588","VulnerableVersion":"\u003c2.40","Level":"MEDIUM","PublishDate":"2023-09-14","Desc":"A flaw was found in Binutils. The field `the_bfd` of `asymbol`struct is uninitialized in the `bfd_mach_o_get_synthetic_symtab` function, which may lead to an application crash and local denial of service.","Score":5.5},{"Name":"coreutils","CurrentVersion":"9.1.0-1","Type":"System","CVEID":"CVE-2024-0684","VulnerableVersion":"\u003c9.4","Level":"MEDIUM","PublishDate":"2024-02-06","Desc":"A flaw was found in the GNU coreutils \"split\" program. A heap overflow with user-controlled data of multiple hundred bytes in length could occur in the line_bytes_split() function, potentially leading to an application crash and denial of service.","Score":5.5},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-27533","VulnerableVersion":"\u003c=7.881","Level":"HIGH","PublishDate":"2023-03-30","Desc":"A vulnerability in input validation exists in curl \u003c8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.","Score":8.8},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-27534","VulnerableVersion":"\u003c=7.88.1","Level":"HIGH","PublishDate":"2023-03-30","Desc":"A path traversal vulnerability exists in curl \u003c8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.","Score":8.8},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-28319","VulnerableVersion":"\u003c8.1.0","Level":"HIGH","PublishDate":"2023-05-26","Desc":"A use after free vulnerability exists in curl \u003cv8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.","Score":7.5},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-38039","VulnerableVersion":"\u003c8.3.0","Level":"HIGH","PublishDate":"2023-09-15","Desc":"When curl retrieves an HTTP response, it stores the incoming headers so that\nthey can be accessed later via the libcurl headers API.\n\nHowever, curl did not have a limit in how many or how large headers it would\naccept in a response, allowing a malicious server to stream an endless series\nof headers and eventually cause curl to run out of heap memory.","Score":7.5},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-28320","VulnerableVersion":"\u003c8.1.0","Level":"MEDIUM","PublishDate":"2023-05-26","Desc":"A denial of service vulnerability exists in curl \u003cv8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.","Score":5.9},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-28321","VulnerableVersion":"\u003c8.1.0","Level":"MEDIUM","PublishDate":"2023-05-26","Desc":"An improper certificate validation vulnerability exists in curl \u003cv8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.","Score":5.9},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-46218","VulnerableVersion":"\u003c=8.4.0","Level":"MEDIUM","PublishDate":"2023-12-07","Desc":"This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.\n","Score":6.5},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-46219","VulnerableVersion":"\u003c8.5.0","Level":"MEDIUM","PublishDate":"2023-12-12","Desc":"When saving HSTS data to an excessively long file name, curl could end up\nremoving all contents, making subsequent requests using that file unaware of\nthe HSTS status they should otherwise use.\n","Score":5.3},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2024-0853","VulnerableVersion":"\u003c8.5.0","Level":"MEDIUM","PublishDate":"2024-02-03","Desc":"curl inadvertently kept the SSL session ID for connections in its cache even when the verify status (*OCSP stapling*) test failed. A subsequent transfer to\nthe same hostname could then succeed if the session ID cache was still fresh, which then skipped the verify status check.","Score":5.3},{"Name":"curl","CurrentVersion":"7.88.1-10+deb12u5","Type":"System","CVEID":"CVE-2023-28322","VulnerableVersion":"\u003c8.1.0","Level":"LOW","PublishDate":"2023-05-26","Desc":"An information disclosure vulnerability exists in curl \u003cv8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.","Score":3.7},{"Name":"dash","CurrentVersion":"0.5.12-2","Type":"System","CVEID":"CVE-2024-21485","VulnerableVersion":"\u003c2.13.0","Level":"MEDIUM","PublishDate":"2024-02-02","Desc":"Versions of the package dash-core-components before 2.13.0; versions of the package dash-core-components before 2.0.0; versions of the package dash before 2.15.0; versions of the package dash-html-components before 2.0.0; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.\r\r**Note:**\r\rThis is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.","Score":5.4},{"Name":"gcc","CurrentVersion":"12.2.0-3","Type":"System","CVEID":"CVE-2023-4039","VulnerableVersion":"\u003c2023-09-12","Level":"MEDIUM","PublishDate":"2023-09-13","Desc":"\n\n**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.\n\n\n\n\n\n","Score":4.8},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2024-32002","VulnerableVersion":"\u003c2.45.0","Level":"CRITICAL","PublishDate":"2024-05-14","Desc":"Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.","Score":9},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2024-32002","VulnerableVersion":"\u003c2.41.0","Level":"CRITICAL","PublishDate":"2024-05-14","Desc":"Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.","Score":9},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2024-32002","VulnerableVersion":"\u003c2.44.0","Level":"CRITICAL","PublishDate":"2024-05-14","Desc":"Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.","Score":9},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2023-23946","VulnerableVersion":"\u003c2.39.2","Level":"HIGH","PublishDate":"2023-02-14","Desc":"Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.","Score":7.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2023-25652","VulnerableVersion":"\u003c2.39.3","Level":"HIGH","PublishDate":"2023-04-25","Desc":"Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.","Score":7.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2023-29007","VulnerableVersion":"\u003c2.39.3","Level":"HIGH","PublishDate":"2023-04-25","Desc":"Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.","Score":7.8},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2022-30947","VulnerableVersion":"\u003c4.11.2","Level":"HIGH","PublishDate":"2022-05-17","Desc":"Jenkins Git Plugin 4.11.1 and earlier allows attackers able to configure pipelines to check out some SCM repositories stored on the Jenkins controller's file system using local paths as SCM URLs, obtaining limited information about other projects' SCM contents.","Score":7.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2022-36882","VulnerableVersion":"\u003c=4.11.3","Level":"HIGH","PublishDate":"2022-07-27","Desc":"A cross-site request forgery (CSRF) vulnerability in Jenkins Git Plugin 4.11.3 and earlier allows attackers to trigger builds of jobs configured to use an attacker-specified Git repository and to cause them to check out an attacker-specified commit.","Score":8.8},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2022-36883","VulnerableVersion":"\u003c=4.11.3","Level":"HIGH","PublishDate":"2022-07-27","Desc":"A missing permission check in Jenkins Git Plugin 4.11.3 and earlier allows unauthenticated attackers to trigger builds of jobs configured to use an attacker-specified Git repository and to cause them to check out an attacker-specified commit.","Score":7.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2023-29007","VulnerableVersion":"\u003c2.40.0","Level":"HIGH","PublishDate":"2023-04-25","Desc":"Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.","Score":7.8},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2017-1000092","VulnerableVersion":"\u003c3.4.0","Level":"HIGH","PublishDate":"2017-10-05","Desc":"Git Plugin connects to a user-specified Git repository as part of form validation. An attacker with no direct access to Jenkins but able to guess at a username/password credentials ID could trick a developer with job configuration permissions into following a link with a maliciously crafted Jenkins URL which would result in the Jenkins Git client sending the username and password to an attacker-controlled server.","Score":7.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2023-22490","VulnerableVersion":"\u003c2.39.2","Level":"MEDIUM","PublishDate":"2023-02-14","Desc":"Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.","Score":5.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2022-38663","VulnerableVersion":"\u003c=4.11.4","Level":"MEDIUM","PublishDate":"2022-08-23","Desc":"Jenkins Git Plugin 4.11.4 and earlier does not properly mask (i.e., replace with asterisks) credentials in the build log provided by the Git Username and Password (`gitUsernamePassword`) credentials binding.","Score":6.5},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2020-2136","VulnerableVersion":"\u003c=4.2.0","Level":"MEDIUM","PublishDate":"2020-03-09","Desc":"Jenkins Git Plugin 4.2.0 and earlier does not escape the error message for the repository URL for Microsoft TFS field form validation, resulting in a stored cross-site scripting vulnerability.","Score":5.4},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2022-36884","VulnerableVersion":"\u003c=4.11.3","Level":"MEDIUM","PublishDate":"2022-07-27","Desc":"The webhook endpoint in Jenkins Git Plugin 4.11.3 and earlier provide unauthenticated attackers information about the existence of jobs configured to use an attacker-specified Git repository.","Score":5.3},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2021-21684","VulnerableVersion":"\u003c=4.8.2","Level":"MEDIUM","PublishDate":"2021-10-06","Desc":"Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.","Score":6.1},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2019-1003010","VulnerableVersion":"\u003c=3.9.1","Level":"MEDIUM","PublishDate":"2019-02-06","Desc":"A cross-site request forgery vulnerability exists in Jenkins Git Plugin 3.9.1 and earlier in src/main/java/hudson/plugins/git/GitTagAction.java that allows attackers to create a Git tag in a workspace and attach corresponding metadata to a build record.","Score":4.3},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2018-1000182","VulnerableVersion":"\u003c=3.9.0","Level":"MEDIUM","PublishDate":"2018-06-05","Desc":"A server-side request forgery vulnerability exists in Jenkins Git Plugin 3.9.0 and older in AssemblaWeb.java, GitBlitRepositoryBrowser.java, Gitiles.java, TFS2013GitRepositoryBrowser.java, ViewGitWeb.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL.","Score":6.4},{"Name":"git","CurrentVersion":"2.39.2-1.1","Type":"System","CVEID":"CVE-2018-1000110","VulnerableVersion":"\u003c=3.7.0","Level":"MEDIUM","PublishDate":"2018-03-13","Desc":"An improper authorization vulnerability exists in Jenkins Git Plugin version 3.7.0 and earlier in GitStatus.java that allows an attacker with network access to obtain a list of nodes and users.","Score":5.3},{"Name":"gnupg","CurrentVersion":"2.2.40-1.1","Type":"System","CVEID":"CVE-2022-3515","VulnerableVersion":"\u003c2.2.41","Level":"CRITICAL","PublishDate":"2023-01-12","Desc":"A vulnerability was found in the Libksba library due to an integer overflow within the CRL parser. The vulnerability can be exploited remotely for code execution on the target system by passing specially crafted data to the application, for example, a malicious S/MIME attachment.","Score":9.8},{"Name":"gnupg","CurrentVersion":"2.2.40-1.1","Type":"System","CVEID":"CVE-2022-34903","VulnerableVersion":"\u003c=2.3.6","Level":"MEDIUM","PublishDate":"2022-07-01","Desc":"GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.","Score":6.5},{"Name":"gzip","CurrentVersion":"1.12.0-1","Type":"System","CVEID":"CVE-2022-1271","VulnerableVersion":"\u003c1.12","Level":"HIGH","PublishDate":"2022-08-31","Desc":"An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.","Score":8.8},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2022-40303","VulnerableVersion":"\u003c2.10.3","Level":"HIGH","PublishDate":"2022-11-23","Desc":"An issue was discovered in libxml2 before 2.10.3. When parsing a multi-gigabyte XML document with the XML_PARSE_HUGE parser option enabled, several integer counters can overflow. This results in an attempt to access an array at a negative 2GB offset, typically leading to a segmentation fault.","Score":7.5},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2022-40304","VulnerableVersion":"\u003c2.10.3","Level":"HIGH","PublishDate":"2022-11-23","Desc":"An issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.","Score":7.8},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2024-25062","VulnerableVersion":"\u003c2.11.7","Level":"HIGH","PublishDate":"2024-02-04","Desc":"An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.","Score":7.5},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2023-28484","VulnerableVersion":"\u003c2.10.4","Level":"MEDIUM","PublishDate":"2023-04-24","Desc":"In libxml2 before 2.10.4, parsing of certain invalid XSD schemas can lead to a NULL pointer dereference and subsequently a segfault. This occurs in xmlSchemaFixupComplexType in xmlschemas.c.","Score":6.5},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2023-29469","VulnerableVersion":"\u003c2.10.4","Level":"MEDIUM","PublishDate":"2023-04-24","Desc":"An issue was discovered in libxml2 before 2.10.4. When hashing empty dict strings in a crafted XML document, xmlDictComputeFastKey in dict.c can produce non-deterministic values, leading to various logic and memory errors, such as a double free. This behavior occurs because there is an attempt to use the first byte of an empty string, and any value is possible (not solely the '\\0' value).","Score":6.5},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2023-39615","VulnerableVersion":"\u003c2.11.0","Level":"MEDIUM","PublishDate":"2023-08-29","Desc":"Xmlsoft Libxml2 v2.11.0 was discovered to contain an out-of-bounds read via the xmlSAX2StartElement() function at /libxml2/SAX2.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via supplying a crafted XML file. NOTE: the vendor's position is that the product does not support the legacy SAX1 interface with custom callbacks; there is a crash even without crafted input.","Score":6.5},{"Name":"libxml2","CurrentVersion":"2.9.14+dfsg-1.3~deb12u1","Type":"System","CVEID":"CVE-2023-45322","VulnerableVersion":"\u003c=2.11.5","Level":"MEDIUM","PublishDate":"2023-10-06","Desc":"libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"","Score":6.5},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2023-4807","VulnerableVersion":"\u003c3.0.11","Level":"HIGH","PublishDate":"2023-09-08","Desc":"Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.","Score":7.8},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2023-5363","VulnerableVersion":"\u003c3.0.12","Level":"HIGH","PublishDate":"2023-10-25","Desc":"Issue summary: A bug has been identified in the processing of key and\ninitialisation vector (IV) lengths.  This can lead to potential truncation\nor overruns during the initialisation of some symmetric ciphers.\n\nImpact summary: A truncation in the IV can result in non-uniqueness,\nwhich could result in loss of confidentiality for some cipher modes.\n\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\nthe key and IV have been established.  Any alterations to the key length,\nvia the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter,\nwithin the OSSL_PARAM array will not take effect as intended, potentially\ncausing truncation or overreading of these values.  The following ciphers\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\n\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\nloss of confidentiality.  For example, when following NIST's SP 800-38D\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\nGCM mode, truncation of the counter portion could lead to IV reuse.\n\nBoth truncations and overruns of the key and overruns of the IV will\nproduce incorrect results and could, in some cases, trigger a memory\nexception.  However, these issues are not currently assessed as security\ncritical.\n\nChanging the key and/or IV lengths is not considered to be a common operation\nand the vulnerable API was recently introduced. Furthermore it is likely that\napplication developers will have spotted this problem during testing since\ndecryption would fail unless both peers in the communication were similarly\nvulnerable. For these reasons we expect the probability of an application being\nvulnerable to this to be quite low. However if an application is vulnerable then\nthis issue is considered very serious. For these reasons we have assessed this\nissue as Moderate severity overall.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this because\nthe issue lies outside of the FIPS provider boundary.\n\nOpenSSL 3.1 and 3.0 are vulnerable to this issue.","Score":7.5},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2023-3446","VulnerableVersion":"\u003c3.1.0","Level":"MEDIUM","PublishDate":"2023-07-19","Desc":"Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.","Score":5.3},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2023-5678","VulnerableVersion":"\u003c3.0.13","Level":"MEDIUM","PublishDate":"2023-11-06","Desc":"Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\n\n","Score":5.3},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2023-6129","VulnerableVersion":"\u003c=3.0.12","Level":"MEDIUM","PublishDate":"2024-01-09","Desc":"Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue.","Score":6.5},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2024-0727","VulnerableVersion":"\u003c3.0.13","Level":"MEDIUM","PublishDate":"2024-01-26","Desc":"Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.","Score":5.5},{"Name":"openssl","CurrentVersion":"3.0.11-1~deb12u2","Type":"System","CVEID":"CVE-2024-0727","VulnerableVersion":"\u003c3.2.0","Level":"MEDIUM","PublishDate":"2024-01-26","Desc":"Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.","Score":5.5},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2018-1000156","VulnerableVersion":"\u003c2.7.6","Level":"HIGH","PublishDate":"2018-04-06","Desc":"GNU Patch version 2.7.6 contains an input validation vulnerability when processing patch files, specifically the EDITOR_PROGRAM invocation (using ed) can result in code execution. This attack appear to be exploitable via a patch file processed via the patch utility. This is similar to FreeBSD's CVE-2015-1418 however although they share a common ancestry the code bases have diverged over time.","Score":7.8},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2018-20969","VulnerableVersion":"\u003c=2.7.6","Level":"HIGH","PublishDate":"2019-08-16","Desc":"do_ed_script in pch.c in GNU patch through 2.7.6 does not block strings beginning with a ! character. NOTE: this is the same commit as for CVE-2019-13638, but the ! syntax is specific to ed, and is unrelated to a shell metacharacter.","Score":7.8},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2018-6951","VulnerableVersion":"\u003c=2.7.6","Level":"HIGH","PublishDate":"2018-02-13","Desc":"An issue was discovered in GNU patch through 2.7.6. There is a segmentation fault, associated with a NULL pointer dereference, leading to a denial of service in the intuit_diff_type function in pch.c, aka a \"mangled rename\" issue.","Score":7.5},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2018-6952","VulnerableVersion":"\u003c=2.7.6","Level":"HIGH","PublishDate":"2018-02-13","Desc":"A double free exists in the another_hunk function in pch.c in GNU patch through 2.7.6.","Score":7.5},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2019-13638","VulnerableVersion":"\u003c2.7.6","Level":"HIGH","PublishDate":"2019-07-26","Desc":"GNU patch through 2.7.6 is vulnerable to OS shell command injection that can be exploited by opening a crafted patch file that contains an ed style diff payload with shell metacharacters. The ed editor does not need to be present on the vulnerable system. This is different from CVE-2018-1000156.","Score":7.8},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2016-10713","VulnerableVersion":"\u003c2.7.6","Level":"MEDIUM","PublishDate":"2018-02-13","Desc":"An issue was discovered in GNU patch before 2.7.6. Out-of-bounds access within pch_write_line() in pch.c can possibly lead to DoS via a crafted input file.","Score":5.5},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2019-13636","VulnerableVersion":"\u003c=2.7.6","Level":"MEDIUM","PublishDate":"2019-07-17","Desc":"In GNU patch through 2.7.6, the following of symlinks is mishandled in certain cases other than input files. This affects inp.c and util.c.","Score":5.9},{"Name":"patch","CurrentVersion":"2.7.6-7","Type":"System","CVEID":"CVE-2019-20633","VulnerableVersion":"\u003c=2.7.6","Level":"MEDIUM","PublishDate":"2020-03-25","Desc":"GNU patch through 2.7.6 contains a free(p_line[p_end]) Double Free vulnerability in the function another_hunk in pch.c that can cause a denial of service via a crafted patch file. NOTE: this issue exists because of an incomplete fix for CVE-2018-6952.","Score":5.5},{"Name":"perl","CurrentVersion":"5.36.0-7+deb12u1","Type":"System","CVEID":"CVE-2023-47100","VulnerableVersion":"\u003c5.38.2","Level":"CRITICAL","PublishDate":"2023-12-02","Desc":"In Perl before 5.38.2, S_parse_uniprop_string in regcomp.c can write to unallocated space because a property name associated with a \\p{...} regular expression construct is mishandled. The earliest affected version is 5.30.0.","Score":9.8},{"Name":"perl","CurrentVersion":"5.36.0-7+deb12u1","Type":"System","CVEID":"CVE-2023-31484","VulnerableVersion":"\u003c5.38.0","Level":"HIGH","PublishDate":"2023-04-29","Desc":"CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.","Score":8.1},{"Name":"perl","CurrentVersion":"5.36.0-7+deb12u1","Type":"System","CVEID":"CVE-2023-31486","VulnerableVersion":"\u003c5.38.0","Level":"HIGH","PublishDate":"2023-04-29","Desc":"HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.","Score":8.1},{"Name":"pkgconf","CurrentVersion":"1.8.1-1","Type":"System","CVEID":"CVE-2023-24056","VulnerableVersion":"\u003c=1.9.3","Level":"MEDIUM","PublishDate":"2023-01-22","Desc":"In pkgconf through 1.9.3, variable duplication can cause unbounded string expansion due to incorrect checks in libpkgconf/tuple.c:pkgconf_tuple_parse. For example, a .pc file containing a few hundred bytes can expand to one billion bytes.","Score":5.5},{"Name":"procps","CurrentVersion":"4.0.2-3","Type":"System","CVEID":"CVE-2023-4016","VulnerableVersion":"\u003c=4.0.3","Level":"LOW","PublishDate":"2023-08-02","Desc":"Under some circumstances, this weakness allows a user who has access to run the “ps” utility on a machine, the ability to write almost unlimited amounts of unfiltered data into the process heap.","Score":3.3},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2021-21698","VulnerableVersion":"\u003c=2.15.0","Level":"HIGH","PublishDate":"2021-11-04","Desc":"Jenkins Subversion Plugin 2.15.0 and earlier does not restrict the name of a file when looking up a subversion key file on the controller from an agent.","Score":7.5},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2022-24070","VulnerableVersion":"\u003c1.14.2","Level":"HIGH","PublishDate":"2022-04-12","Desc":"Subversion's mod_dav_svn is vulnerable to memory corruption. While looking up path-based authorization rules, mod_dav_svn servers may attempt to use memory which has already been freed. Affected Subversion mod_dav_svn servers 1.10.0 through 1.14.1 (inclusive). Servers that do not use mod_dav_svn are not affected.","Score":7.5},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2017-1000085","VulnerableVersion":"\u003c=2.8","Level":"MEDIUM","PublishDate":"2017-10-05","Desc":"Subversion Plugin connects to a user-specified Subversion repository as part of form validation (e.g. to retrieve a list of tags). This functionality improperly checked permissions, allowing any user with Item/Build permission (but not Item/Configure) to connect to any web server or Subversion server and send credentials with a known ID, thereby possibly capturing them. Additionally, this functionality did not require POST requests be used, thereby allowing the above to be performed without direct access to Jenkins via Cross-Site Request Forgery attacks.","Score":6.5},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2018-1000111","VulnerableVersion":"\u003c=2.10.2","Level":"MEDIUM","PublishDate":"2018-03-13","Desc":"An improper authorization vulnerability exists in Jenkins Subversion Plugin version 2.10.2 and earlier in SubversionStatus.java and SubversionRepositoryStatus.java that allows an attacker with network access to obtain a list of nodes and users.","Score":5.3},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2020-2111","VulnerableVersion":"\u003c=2.13.0","Level":"MEDIUM","PublishDate":"2020-02-12","Desc":"Jenkins Subversion Plugin 2.13.0 and earlier does not escape the error message for the Project Repository Base URL field form validation, resulting in a stored cross-site scripting vulnerability.","Score":5.4},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2020-2304","VulnerableVersion":"\u003c=2.13.1","Level":"MEDIUM","PublishDate":"2020-11-04","Desc":"Jenkins Subversion Plugin 2.13.1 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.","Score":6.5},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2022-29046","VulnerableVersion":"\u003c=2.15.3","Level":"MEDIUM","PublishDate":"2022-04-12","Desc":"Jenkins Subversion Plugin 2.15.3 and earlier does not escape the name and description of List Subversion tags (and more) parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.","Score":5.4},{"Name":"subversion","CurrentVersion":"1.14.2-4+b2","Type":"System","CVEID":"CVE-2022-29048","VulnerableVersion":"\u003c=2.15.3","Level":"MEDIUM","PublishDate":"2022-04-12","Desc":"A cross-site request forgery (CSRF) vulnerability in Jenkins Subversion Plugin 2.15.3 and earlier allows attackers to connect to an attacker-specified URL.","Score":4.3},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-1000034","VulnerableVersion":"\u003c6.10c22","Level":"CRITICAL","PublishDate":"2018-02-09","Desc":"An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.","Score":9.1},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-1000033","VulnerableVersion":"\u003c6.10c22","Level":"CRITICAL","PublishDate":"2018-02-09","Desc":"An out-of-bounds read exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service and read sensitive memory.","Score":9.1},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-1000031","VulnerableVersion":"\u003c6.10c22","Level":"HIGH","PublishDate":"2018-02-09","Desc":"A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2014-8140","VulnerableVersion":"\u003c=6.0","Level":"HIGH","PublishDate":"2020-01-31","Desc":"Heap-based buffer overflow in the test_compr_eb function in Info-ZIP UnZip 6.0 and earlier allows remote attackers to execute arbitrary code via a crafted zip file in the -t command argument to the unzip command.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2014-8141","VulnerableVersion":"\u003c=6.0","Level":"HIGH","PublishDate":"2020-01-31","Desc":"Heap-based buffer overflow in the getZip64Data function in Info-ZIP UnZip 6.0 and earlier allows remote attackers to execute arbitrary code via a crafted zip file in the -t command argument to the unzip command.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-1000035","VulnerableVersion":"\u003c=6.00","Level":"HIGH","PublishDate":"2018-02-09","Desc":"A heap-based buffer overflow exists in Info-Zip UnZip version \u003c= 6.00 in the processing of password-protected archives that allows an attacker to perform a denial of service or to possibly achieve code execution.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2014-8139","VulnerableVersion":"\u003c=6.0","Level":"HIGH","PublishDate":"2020-01-31","Desc":"Heap-based buffer overflow in the CRC32 verification in Info-ZIP UnZip 6.0 and earlier allows remote attackers to execute arbitrary code via a crafted zip file in the -t command argument to the unzip command.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2015-1315","VulnerableVersion":"\u003c6.10b","Level":"HIGH","PublishDate":"2015-02-23","Desc":"Buffer overflow in the charset_to_intern function in unix/unix.c in Info-Zip UnZip 6.10b allows remote attackers to execute arbitrary code via a crafted string, as demonstrated by converting a string from CP866 to UTF-8.","Score":7.5},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-1000032","VulnerableVersion":"\u003c6.10c22","Level":"HIGH","PublishDate":"2018-02-09","Desc":"A heap-based buffer overflow exists in Info-Zip UnZip version 6.10c22 that allows an attacker to perform a denial of service or to possibly achieve code execution.","Score":7.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2014-9913","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2017-01-18","Desc":"Buffer overflow in the list_files function in list.c in Info-Zip UnZip 6.0 allows remote attackers to cause a denial of service (crash) via vectors related to the compression method.","Score":4},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2016-9844","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2017-01-18","Desc":"Buffer overflow in the zi_short function in zipinfo.c in Info-Zip UnZip 6.0 allows remote attackers to cause a denial of service (crash) via a large compression method value in the central directory file header.","Score":4},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2015-7697","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2015-11-06","Desc":"Info-ZIP UnZip 6.0 allows remote attackers to cause a denial of service (infinite loop) via empty bzip2 data in a ZIP archive.","Score":4.3},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2015-7696","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2015-11-06","Desc":"Info-ZIP UnZip 6.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) or possibly execute arbitrary code via a crafted password-protected ZIP archive, possibly related to an Extra-Field size value.","Score":6.8},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2014-9636","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2015-02-06","Desc":"unzip 6.0 allows remote attackers to cause a denial of service (out-of-bounds read or write and crash) via an extra field with an uncompressed size smaller than the compressed field size in a zip archive that advertises STORED method compression.","Score":5},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2018-18384","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2018-10-16","Desc":"Info-ZIP UnZip 6.0 has a buffer overflow in list.c, when a ZIP archive has a crafted relationship between the compressed-size value and the uncompressed-size value, because a buffer size is 10 and is supposed to be 12.","Score":5.5},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2022-0529","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2022-02-09","Desc":"A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.","Score":5.5},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2022-0530","VulnerableVersion":"\u003c6.0","Level":"MEDIUM","PublishDate":"2022-02-09","Desc":"A flaw was found in Unzip. The vulnerability occurs during the conversion of a wide string to a local string that leads to a heap of out-of-bound write. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.","Score":5.5},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2019-13232","VulnerableVersion":"\u003c6.0","Level":"LOW","PublishDate":"2019-07-04","Desc":"Info-ZIP UnZip 6.0 mishandles the overlapping of files inside a ZIP container, leading to denial of service (resource consumption), aka a \"better zip bomb\" issue.","Score":3.3},{"Name":"unzip","CurrentVersion":"6.0.0-28","Type":"System","CVEID":"CVE-2021-4217","VulnerableVersion":"\u003c6.0","Level":"LOW","PublishDate":"2022-08-24","Desc":"A flaw was found in unzip. The vulnerability occurs due to improper handling of Unicode strings, which can lead to a null pointer dereference. This flaw allows an attacker to input a specially crafted zip file, leading to a crash or code execution.","Score":3.3},{"Name":"python3.8 - pip","CurrentVersion":"23.0.1","Type":"Python","CVEID":"CVE-2023-5752","VulnerableVersion":"\u003c23.3","Level":"LOW","PublishDate":"2023-10-25","Desc":"When installing a package from a Mercurial VCS URL  (ie \"pip install \nhg+...\") with pip prior to v23.3, the specified Mercurial revision could\n be used to inject arbitrary configuration options to the \"hg clone\" \ncall (ie \"--config\"). Controlling the Mercurial configuration can modify\n how and which repository is installed. This vulnerability does not \naffect users who aren't installing from Mercurial.\n","Score":3.3},{"Name":"python3.8 - setuptools","CurrentVersion":"57.5.0","Type":"Python","CVEID":"CVE-2022-40897","VulnerableVersion":"\u003c65.5.1","Level":"MEDIUM","PublishDate":"2022-12-23","Desc":"Python Packaging Authority (PyPA) setuptools before 65.5.1 allows remote attackers to cause a denial of service via HTML in a crafted package or custom PackageIndex page. There is a Regular Expression Denial of Service (ReDoS) in package_index.py.","Score":5.9},{"Name":"Image History","CurrentVersion":"-","Type":"Docker Histories","CVEID":"-","VulnerableVersion":"-","Level":"medium","PublishDate":"","Desc":"Docker history has found the senstive environment with key 'POSTGRES_PASSWORD' and value: postgres.","Score":0},{"Name":"Image History","CurrentVersion":"-","Type":"Docker Histories","CVEID":"-","VulnerableVersion":"-","Level":"medium","PublishDate":"","Desc":"Docker history has found the senstive environment with key 'GPG_KEY' and value: E3FF2839C048B25C084DEBE9B26995E310250568.","Score":0}]